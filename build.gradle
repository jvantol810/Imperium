plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'Imperium'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(23)
	}
}

// Include the dependencies.gradle file
apply from: 'dependencies.gradle'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

tasks.register('runJarWithToolchain', Exec) {
	dependsOn tasks.build, tasks.jar

	def jarFile = layout.buildDirectory.file("libs/${project.name}-${project.version}.jar").get().asFile

	def javaLauncher = javaToolchains.launcherFor {
		languageVersion = JavaLanguageVersion.of(23)
	}.get()

	executable = javaLauncher.executablePath.asFile.absolutePath
	args = ['-jar', jarFile.absolutePath]
}

tasks.named('test') {
	useJUnitPlatform()
}

// Define values
def imageName = 'listmaster'
def containerName = 'listmaster'

// Task: Build Docker image
tasks.register("buildDockerImage", Exec) {
	dependsOn bootJar  // Ensures JAR is built first
	commandLine 'docker', 'build', '-t', imageName, '.'
}

// Task: Run Docker container
tasks.register("runDockerCompose", Exec) {
	dependsOn buildDockerImage
	commandLine 'docker', 'compose', 'up'
}

// Convenience task to do all in one
tasks.register("dockerCompose") {
	dependsOn runDockerCompose
	group = 'docker'
	description = 'Builds the JAR, builds the Docker image, and runs docker compose'
}

// Task: Run Docker container
tasks.register("runDockerComposeDetached", Exec) {
	dependsOn buildDockerImage
	commandLine 'docker', 'compose', 'up', '-d'
}

tasks.register("dockerComposeDetached") {
	dependsOn runDockerComposeDetached
	group = 'docker'
	description = 'Starts a detached run'
}

tasks.register("runDockerComposeDown", Exec) {
	commandLine 'docker', 'compose','down'
}

tasks.register("dockerComposeDown") {
	dependsOn runDockerComposeDown
	group = 'docker'
	description = 'Brings down the running docker containers.'
}
